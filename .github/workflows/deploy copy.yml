name: Deploy Astro to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4
      
      # 2. Node.js 설정 (내장 캐싱 활용)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # 3. 의존성 설치 (npm ci가 더 안정적)
      - name: Install dependencies
        run: npm ci
      
      # 4. 빌드 실행 (항상 실행하여 안정성 확보)
      - name: Build Astro site
        run: |
          npm run build
          echo "Build completed, checking dist folder..."
          ls -la dist/
        env:
          NODE_ENV: production
      
      # 5. .nojekyll 파일 생성 (GitHub Pages Jekyll 처리 방지)
      - name: Add .nojekyll file
        run: touch dist/.nojekyll
      
      # 6. 빌드 결과 확인
      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found"
            exit 1
          fi
          echo "dist directory contents:"
          find dist -type f | head -10
      
      # 7. GitHub Pages 설정
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      # 8. 아티팩트 업로드
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
      
      # 9. GitHub Pages 배포
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
